(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{208:function(a,t,n){"use strict";n.r(t);var e=n(0),s=Object(e.a)({},(function(){var a=this,t=a.$createElement,n=a._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h2",{attrs:{id:"ankrchain-cli-transaction"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ankrchain-cli-transaction"}},[a._v("#")]),a._v(" ankrchain-cli transaction")]),a._v(" "),n("p",[a._v("transaction is used to send coins to specified address or send metering")]),a._v(" "),n("h3",{attrs:{id:"sub-commands"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sub-commands"}},[a._v("#")]),a._v(" Sub commands")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('PS D:\\> ankrchain-cli transaction --help\ntransaction is used to send coins to specified address or send metering\n\nUsage:\n  ankr-chain-cli transaction [flags]\n  ankr-chain-cli transaction [command]\n\nAvailable Commands:\n  deploy      deploy smart contract\n  invoke      invoke smart contract\n  metering    send metering transaction\n  transfer    send coins to another account\n\nFlags:\n      --chain-id string    block chain id (default "ankr-chain")\n      --gas-limit string   gas limit (default "20000")\n      --gas-price string   gas price(should more than 10000000000000000) (default "10000000000000000")\n  -h, --help               help for transaction\n      --memo string        transaction memo\n      --nodeurl string     the url of a validator\n      --version string     block chain net version (default "1.0")\nUse "ankrchain-cli transaction [command] --help" for more information about a command.\n')])])]),n("h3",{attrs:{id:"example"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[a._v("#")]),a._v(" example")]),a._v(" "),n("ul",[n("li",[a._v("metering"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("PS D:\\> ankrchain-cli transaction metering --nodeurl http://localhost:26657 --dcname datacenter_name --namespace test --value test-value --privkey privkey --chain-id test-chain-FojX8z\nSet metering success.\n")])])])]),a._v(" "),n("li",[a._v("transfer"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("PS D:\\> ankrchain-cli transaction transfer --to F4656949BD747057A59DDF90A218EC352E3916A096924D --amount 20000000000000000000 --keystore .\\UTC--2019-08-01T02-25-01.685454800Z--E1403CA0DC201F377E820CFA62117A48D4D612400C20D3 --nodeurl http://localhost:26657 --chain-id test-chain-FojX8z\nPlease input the keystore password:\n\nTransaction sent. Tx hash: 210AEB37AD654AE04CC7A5FC650C23CD4E03A12CC4D2A63A1288D534A8475C31\n")])])])]),a._v(" "),n("li",[a._v("deploy"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("PS D:\\> ankrchain-cli transaction deploy  --gas-limit 5000000000000 --nodeurl localhost:26657 --keystore .\\UTC--2019-11-07T10-16-25.504436700Z--B508ED0D54597D516A680E7951F18CAD24C7EC9FCFCD67 --file TestContract.wasm --abi  test --chain-id test-chain-ZFaVSj\n\nPlease input the keystore password:\nStart Sending transaction...\nContract deployed successful.\ntransaction hash: 59F1B9025D813D6B8ED0CF33B7979E8778B93D1D39F3773B6F74C528F5BC3D5D\nblock height: 20\ncontract address: A277D0BD075656C3DBF92F9FEDC396AFFC75C95B9CF6D6\n")])])])]),a._v(" "),n("li",[a._v("invoke"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('PS D:\\> ankrchain-cli transaction invoke --nodeurl localhost:26657 --address A277D0BD075656C3DBF92F9FEDC396AFFC75C95B9CF6D6 --method testFuncWithString --rtn-type string --keystore .\\UTC--2019-11-07T10-16-25.504436700Z--B508ED0D54597D516A680E7951F18CAD24C7EC9FCFCD67 --chain-id test-chain-ZFaVSj --args \'[{\\"index\\":1,\\"Name\\":\\"args\\",\\"ParamType\\":\\"string\\",\\"Value\\":{\\"testStr\\":\\"testFuncWithInt\\"}}]\'\nPlease input the keystore password:\nStart Sending transaction...\nInvoke smart contract successful.\ntransaction hash: 27B1BFDE5C09A8DA3B159EDD8EEC2EEAFD243C445F19E66C7C2FE6BB629A53A7\nblock height: 3725\nresult: {"issuccess":true,"resultType":"string","value":"{\\"testFuncWithString\\":\\"testfuncwithstring sucess\\"}"}\n')])])])])])])}),[],!1,null,null,null);t.default=s.exports}}]);